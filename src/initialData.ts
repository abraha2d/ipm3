import {
  CANData,
  ChargeCableState,
  ExteriorColor,
  FaultLampStatus,
  Gear,
  GearLeverPosition,
  IPM3Screen,
  LampFlashStatus,
  LatchStatus,
  LightRequest,
  LightStatus,
  SeatbeltBuckleStatus,
  SeatbeltChimeStatus,
  SelectedState,
  SpeedUnits,
  SpoilerType,
  SunStatus,
  SwitchStatus,
  TrackModeState,
  TractionControlMode,
} from "./types";

export let canData: CANData = {
  airbagLight: false,
  cp: {
    chargeCableState: ChargeCableState.UNKNOWN_SNA,
    chargeDoorOpen: false,
  },
  di: {
    gear: Gear.SNA,
    trackModeState: TrackModeState.UNAVAILABLE,
    tractionControlMode: TractionControlMode.NORMAL,
    tcTelltaleFlash: false,
    tcTelltaleOn: false,
    vdcTelltaleFlash: false,
    vdcTelltaleOn: false,
    vehicleHoldTelltaleOn: false,
  },
  esp: {
    absFaultLamp: FaultLampStatus.OFF,
    ebdFaultLamp: FaultLampStatus.OFF,
    espFaultLamp: FaultLampStatus.OFF,
    espLampFlash: LampFlashStatus.OFF,
  },
  gps: {
    accuracy_m: 0,
    latitude_deg: 0,
    longitude_deg: 0,
    vehicleHeading_deg: 0,
  },
  gtw: {
    exteriorColor: ExteriorColor.MIDNIGHT_SILVER,
    spoilerType: SpoilerType.NOT_INSTALLED,
  },
  ipm3: {
    leftScreen: IPM3Screen.MAP_OR_CALL,
    rightScreen: IPM3Screen.ENERGY,
    selected: SelectedState.NONE,
  },
  latches: {
    frontLeft: LatchStatus.SNA,
    rearLeft: LatchStatus.SNA,
    frontRight: LatchStatus.SNA,
    rearRight: LatchStatus.SNA,
    trunk: LatchStatus.SNA,
    frunk: LatchStatus.SNA,
  },
  lights: {
    leftBrake: LightStatus.SNA,
    dynamicBrake: LightRequest.OFF,
    leftTail: LightStatus.SNA,
    rearLeftTurnSignal: LightStatus.SNA,
    rightBrake: LightStatus.SNA,
    rearFog: LightStatus.SNA,
    reverse: LightStatus.SNA,
    rightTail: LightStatus.SNA,
    rearRightTurnSignal: LightStatus.SNA,
    DRLLeft: LightStatus.SNA,
    DRLRight: LightStatus.SNA,
    fogLeft: LightStatus.SNA,
    fogRight: LightStatus.SNA,
    highBeamLeft: LightStatus.SNA,
    highBeamRight: LightStatus.SNA,
    indicatorLeftRequest: LightRequest.OFF,
    indicatorRightRequest: LightRequest.OFF,
    lowBeamLeft: LightStatus.SNA,
    lowBeamRight: LightStatus.SNA,
    parkLeft: LightStatus.SNA,
    parkRight: LightStatus.SNA,
    sideMarkers: LightStatus.SNA,
    sideRepeaterLeft: LightStatus.SNA,
    sideRepeaterRight: LightStatus.SNA,
    turnSignalLeft: LightStatus.SNA,
    turnSignalRight: LightStatus.SNA,
  },
  power: {
    maxDischarge_kW: 0,
    maxRegen_kW: 0,
    rearLimit_kW: 0,
    rear_kW: 0,
    front_kW: 0,
    frontLimit_kW: 0,
    regenRating_kW: 0,
    powerRating_kW: 0,
  },
  seatbelts: {
    secondRowCenter: SeatbeltChimeStatus.SNA,
    secondRowLeft: SeatbeltChimeStatus.SNA,
    secondRowRight: SeatbeltChimeStatus.SNA,
    driverBuckle: SeatbeltBuckleStatus.UNBUCKLED,
    driver: SeatbeltChimeStatus.SNA,
    passenger: SeatbeltChimeStatus.SNA,
  },
  sensors: {
    tempAmbientFiltered_C: 0,
  },
  switches: {
    gearLeverPosition: GearLeverPosition.CENTER,
    gearLeverButton: false,
    swcLeftDoublePress: false,
    swcLeftPressed: SwitchStatus.SNA,
    swcLeftScrollTicks: 0,
    swcLeftTiltLeft: SwitchStatus.SNA,
    swcLeftTiltRight: SwitchStatus.SNA,
    swcRightDoublePress: false,
    swcRightPressed: SwitchStatus.SNA,
    swcRightScrollTicks: 0,
    swcRightTiltLeft: SwitchStatus.SNA,
    swcRightTiltRight: SwitchStatus.SNA,
  },
  tpms: {
    hardWarning: false,
    softWarning: false,
    overPressureWarning: false,
    temperatureWarning: false,
    systemFault: false,
    FLpressure_bar: 0,
    FRpressure_bar: 0,
    RLpressure_bar: 0,
    RRpressure_bar: 0,
    FLtemp_C: 0,
    FRtemp_C: 0,
    RLtemp_C: 0,
    RRtemp_C: 0,
  },
  ui: {
    parkBrakeFault: false,
    speedUnits: SpeedUnits.MPH,
    speed: 0,
    isSunUp: SunStatus.SNA,
    range_mi: 0,
    SOC_percent: 0,
    ratedWHpM: 0,
    odometer: 0,
  },
  unixTime_s: 0,
};

export default canData;
